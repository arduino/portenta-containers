name: Build & publish Arduino docker applications

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches:
    - devel
    - main
    - next
    # Publish semver tags as releases.
    tags: [ 'arduino-*' ]

env:
  REGISTRY: docker.io

jobs:

  build:

    if: github.repository == 'arduino/portenta-containers'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - context: ./arduino-iot-cloud-provisioning
          image: arduino/arduino-iot-cloud-provisioning
        - context: ./arduino-ootb-python-devel
          image: arduino/arduino-ootb-python-devel
        - context: ./arduino-ootb-webapp
          image: arduino/arduino-ootb-webapp
        - context: ./aws-device-cert
          image: arduino/aws-device-cert
        - context: ./jupyter-lab-x8
          image: arduino/jupyter-lab-x8
        - context: ./python-ble-scanner-x8
          image: arduino/python-ble-scanner-x8
        - context: ./python-rpc-sensors
          image: arduino/python-rpc-sensors
        - context: ./python-rpc-serial
          image: arduino/python-rpc-serial
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Add support for more platforms with QEMU
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Extract metadata (tags, labels) for Docker
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          # set latest tag for default branch
          type=raw,value=latest,enable={{is_default_branch}}
        images: ${{ matrix.image }}

    # Build and push Docker image with Buildx (don't push on PR)
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v6
      with:
        context: ${{ matrix.context }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
